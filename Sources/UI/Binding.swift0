//
//  Binding.swift
//  StoryShot
//
//  Created by Rinat Ibragimov on 14.10.2025.
//

import SwiftUI

extension View {
  public func binding<InnerContent : View>(@ViewBuilder content: @escaping () -> InnerContent) -> some View {
    modifier(BindingController(innerContent: content))
  }
}

struct BindingController<InnerContent: View>: ViewModifier {
  var innerContent: () -> InnerContent

  init(@ViewBuilder innerContent: @escaping () -> InnerContent) {
    self.innerContent = innerContent
  }

  public func body (content: Content) -> some View {
    return VStack {
      content

      innerContent()
    }
  }
}

#Preview {
  Text("Hello, world!")
    .binding {
      Text("Inner Content")
    }
}
